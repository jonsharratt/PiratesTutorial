syntax = "proto2";
package schema.improbable.util;

import "improbable/entity_state.proto";

import "improbable/math/coordinates.proto";
import "improbable/corelib/math/quaternion.proto";

// Events
// Trying to spawn an entity
message SpawnEntity {
    // Name of the entity needed to be spawned
  optional string entityName = 1;
  // Position where entity should be spawned
  optional improbable.math.Coordinates position = 2;
  // Rotation the entity should be spawned at
  optional improbable.corelib.math.Quaternion rotation = 3;
}
     
// State that allows entity to be spawned from scene into simulation
message SpawnInStackData {
  repeated SpawnEntity spawnEntity = 1000 [(improbable.state_event) = true];
}

extend improbable.EntityState {
  optional SpawnInStackData spawnInStack = 1001
    [(improbable.entity_state_options) = {
      state_synchronized: true
      state_queryable: false
    }];
}
     